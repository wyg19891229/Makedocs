{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Netbrain REST API Documentation Netbrain provide all available REST APIs in this repository. We offer two sections in current repo. First section describe the workflow of five customer use cases with API multiple calling. Second section elaborate the detail information for each API. We provide resonable explanations and clear sample code in both sections. We hope users can understand the different features of different APIs and construct a concept to solve some use cases by multi-calling Netbrain REST APIs. Section 1) Golden Use Case Templates 1) Get Path By Calling APIs 2) Sites Management by Calling APIs 3) Calling Trigger Diagnosis API 4) Discovery and Devices Management by Calling APIs 5) CMDB Synchronized by Calling APIs 6) Logic of API Calling for Embed Map Section 2) REST APIs Documentation Athentication and Authorization 1) Login API 2) Get All Accessible Tenants API 3) Get All Accessible Domains API 4) Specify A Working Domain API 5) Logout API Benchmark Task Management 1) Add Benchmark Task API 2) Delete Benchmark Task API 3) Get Benchmark Task Runs API 4) Get Benchmark Task Status API 5) Run Benchmark Task Now API 6) Update Benchmark Task API Devices Management 1) Create Devices Attribute API 2) Delete Devices Attribute API 3) Delete Devices API 4) Get Device Attributes API 5) Get Device API 6) Get Front Server of A Device API 7) Get Group Devices API 8) Set Device Attribute API 9) Get Device Configuration API Discovery Task Management 1) Add Seed IPs to Discovery Task API 2) Delete Seed IPs to Discovery Task API 3) Get All Discovery Tasks API 4) Get All Seed IPs from Discovery Task API 5) Get Discovery Task Live Access Log API 6) Get Discovery Tasks Result API 7) Get Discovery Tasks Status API 8) Run Discovery Task Now API Device Interfaces Management 1) Create Interface Attribute API 2) Delete Interface Attribute API 3) Get All Interfaces of A Device API 4) Get Connected Switch Port API 5) Get Interface Attributes API 6) Set Interface Attributes API Map Management 1) Delete Map API 2) Export Map API Module Management 1) Applicable Module Attributes Table 2) Create Module Attribute API 3) Delete Module Attribute API 4) Get All Modules of A Device API 5) Get Module Attributes API 6) Set Module Attributes API Network Setting 1) Add Network Settings API 2) Delete Network Settings API 3) Update Network Settings API Path Management 1) Resolve Device Gateway API 2) Calculate Path API 3) Get Path Calculation Result API 4) Stop A PAth API User Roles Management 1) Add Role API 2) Delete Role API 3) Update Role API 4) Get Role Information API Site Management 1) Add Site Devices API 2) Commit Site Transaction API 3) Create A Leaf Site API 4) Create A Parent Site API 5) Create A Site Transaction API 6) Create Site API 7) Delete A Site API 8) Delete Site Devices API 9) Get Child Site API 10) Get Site Devices API 11) Get Site Info API 12) Remove Site Transaction API 13) Replace Site Devices API 14) Site Transaction Heartbeat API Tenants and Domains Management 1) Add Domain API 2) Add Tenant API 3) Assign Users to Domain API 4) Assign Users to Tenant API 5) Delete Domain API 6) Delete Tenant API 7) Delete Users from Domain API 8) Update Domain API 9) Update Tenant API Topology Management 1) Build L2 Topology API 2) Build L3 Topology API 3) Get Connected Switch Port API 4) Get Device Neighbors by Topology Type API 5) Get Topology Build Task Status API 6) Get One Ip Table API Trigger Diagnosis API 1) Map Device and Its Neighbors 2) Open Site Map of The Device 3) Trigger An Existing Map 4) Map A Path User Management 1) Add User API 2) Delete User API 3) Get Usage Report of Users API 4) Get Detail Usage Report of Users API 5) Update User API 6) Get Users API Get Files List API","title":"Home"},{"location":"#netbrain-rest-api-documentation","text":"Netbrain provide all available REST APIs in this repository. We offer two sections in current repo. First section describe the workflow of five customer use cases with API multiple calling. Second section elaborate the detail information for each API. We provide resonable explanations and clear sample code in both sections. We hope users can understand the different features of different APIs and construct a concept to solve some use cases by multi-calling Netbrain REST APIs.","title":"Netbrain REST API Documentation"},{"location":"#section-1-golden-use-case-templates","text":"1) Get Path By Calling APIs 2) Sites Management by Calling APIs 3) Calling Trigger Diagnosis API 4) Discovery and Devices Management by Calling APIs 5) CMDB Synchronized by Calling APIs 6) Logic of API Calling for Embed Map","title":"Section 1) Golden Use Case Templates"},{"location":"#section-2-rest-apis-documentation","text":"","title":"Section 2) REST APIs Documentation"},{"location":"#athentication-and-authorization","text":"1) Login API 2) Get All Accessible Tenants API 3) Get All Accessible Domains API 4) Specify A Working Domain API 5) Logout API","title":"Athentication and Authorization"},{"location":"#benchmark-task-management","text":"1) Add Benchmark Task API 2) Delete Benchmark Task API 3) Get Benchmark Task Runs API 4) Get Benchmark Task Status API 5) Run Benchmark Task Now API 6) Update Benchmark Task API","title":"Benchmark Task Management"},{"location":"#devices-management","text":"1) Create Devices Attribute API 2) Delete Devices Attribute API 3) Delete Devices API 4) Get Device Attributes API 5) Get Device API 6) Get Front Server of A Device API 7) Get Group Devices API 8) Set Device Attribute API 9) Get Device Configuration API","title":"Devices Management"},{"location":"#discovery-task-management","text":"1) Add Seed IPs to Discovery Task API 2) Delete Seed IPs to Discovery Task API 3) Get All Discovery Tasks API 4) Get All Seed IPs from Discovery Task API 5) Get Discovery Task Live Access Log API 6) Get Discovery Tasks Result API 7) Get Discovery Tasks Status API 8) Run Discovery Task Now API","title":"Discovery Task Management"},{"location":"#device-interfaces-management","text":"1) Create Interface Attribute API 2) Delete Interface Attribute API 3) Get All Interfaces of A Device API 4) Get Connected Switch Port API 5) Get Interface Attributes API 6) Set Interface Attributes API","title":"Device Interfaces Management"},{"location":"#map-management","text":"1) Delete Map API 2) Export Map API","title":"Map Management"},{"location":"#module-management","text":"1) Applicable Module Attributes Table 2) Create Module Attribute API 3) Delete Module Attribute API 4) Get All Modules of A Device API 5) Get Module Attributes API 6) Set Module Attributes API","title":"Module Management"},{"location":"#network-setting","text":"1) Add Network Settings API 2) Delete Network Settings API 3) Update Network Settings API","title":"Network Setting"},{"location":"#path-management","text":"1) Resolve Device Gateway API 2) Calculate Path API 3) Get Path Calculation Result API 4) Stop A PAth API","title":"Path Management"},{"location":"#user-roles-management","text":"1) Add Role API 2) Delete Role API 3) Update Role API 4) Get Role Information API","title":"User Roles Management"},{"location":"#site-management","text":"1) Add Site Devices API 2) Commit Site Transaction API 3) Create A Leaf Site API 4) Create A Parent Site API 5) Create A Site Transaction API 6) Create Site API 7) Delete A Site API 8) Delete Site Devices API 9) Get Child Site API 10) Get Site Devices API 11) Get Site Info API 12) Remove Site Transaction API 13) Replace Site Devices API 14) Site Transaction Heartbeat API","title":"Site Management"},{"location":"#tenants-and-domains-management","text":"1) Add Domain API 2) Add Tenant API 3) Assign Users to Domain API 4) Assign Users to Tenant API 5) Delete Domain API 6) Delete Tenant API 7) Delete Users from Domain API 8) Update Domain API 9) Update Tenant API","title":"Tenants and Domains Management"},{"location":"#topology-management","text":"1) Build L2 Topology API 2) Build L3 Topology API 3) Get Connected Switch Port API 4) Get Device Neighbors by Topology Type API 5) Get Topology Build Task Status API 6) Get One Ip Table API","title":"Topology Management"},{"location":"#trigger-diagnosis-api","text":"1) Map Device and Its Neighbors 2) Open Site Map of The Device 3) Trigger An Existing Map 4) Map A Path","title":"Trigger Diagnosis API"},{"location":"#user-management","text":"1) Add User API 2) Delete User API 3) Get Usage Report of Users API 4) Get Detail Usage Report of Users API 5) Update User API 6) Get Users API Get Files List API","title":"User Management"},{"location":"Authentication and Authorization/","text":"Authentication and Authorization API GET /V1/CMDB/Domains/{?tenantId} Use this function returns a list of accessible domains in a specific tenant. The returned accessible domains vary by the user privileges you use to log in. To retrieve a full list of domains in a specified tenant, you must log in with system admin or tenant admin permissions. Detail Information Title : Get all accessible domains of a tenants API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/CMDB/Domains Authentication : Type In Name Bearer Authentication Parameters Authentication token ### Request body( *required ) No request body. ### Query Parameters( *required ) Name Type Description tenantId* string Unique identifier for the tenant from which you desire to retrieve the domain information. tenantId can be retrieved from get all accessible tenants. Note: If user don't have the privilege to visit all tenants, specific tenantId is required for this API. ### Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API. ### Response Name Type Description domains array A list of all accessible domains. domainId string The domain ID. domainName string The domain name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { 'domains': [ { 'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service' }, { 'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test' } ], 'statusCode': 790200, 'statusDescription': 'Success.' } ### Full Example : # import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token data = {\"tenantId\": tenantId} try: # Do the HTTP request response = requests.get(full_url, params=data, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get domains failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'domains': [{'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service'}, {'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test'}], 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains?token=c00de805-9210-44a9-9a26-f0c1e944ea36&tenantId=fb24f3f0-81a7-1929-4b8f-99106c23fa5b' \\ -H 'Postman-Token: ee6dda7c-cbcc-43b8-8957-9c4f2d2a4b5b' \\ -H 'cache-control: no-cache' Error Examples ################################################################################################################### \"\"\"Error 1: empty tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"{'domains': [], 'statusCode': 790200, 'statusDescription': 'Success.'}\" ################################################################################################################### \"\"\"Error 2: wrong tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"\"\"Get domains failed! - {\"statusCode\":791006, \"statusDescription\":\"tenant with id aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa does not exist.\"}\"\"\" GET /V1/CMDB/Tenants/ This method returns a list of accessible tenants (including tenant ID and names). The returned tenants list varies by the privileges of different user roles. To retrieve a full list of all available tenants, users must log in with admin role. Detail Information Title : Get All Asseccible Tenants API Version : 01/23/2019. API Server URL : http(s):// < NetBrain Web API Server Address > /ServicesAPI/API/V1/CMDB/Tenants Authentication : Type In Name Bearer Authentication Parameters Authentication token Request body( *required ) No request body. Parameters( *required ) No parameters required Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API. Response Name Type Description tenants array A list of all accessible tenants. tenantId string The tenant ID. tenantName string The tenant name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example : { 'tenants': [ { 'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant' } ], 'statusCode': 790200, 'statusDescription': 'Success.' } Full Example : # import python modules import json import requests import time import urllib3 import pprint urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token try: # Do the HTTP request response = requests.get(full_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get tenants failed! - \" + str(response.text)) except Exception as e: return (str(e)) {'tenants': [{'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant'}], 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants?token=c00de805-9210-44a9-9a26-f0c1e944ea36' \\ -H 'Postman-Token: b3ecf2c4-d94a-4059-a01f-bcd21fc8a286' \\ -H 'cache-control: no-cache' Error Example : ################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"\" Response: \"Invalid URL'': No schema supplied. Perhaps you meant http://\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.1688.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty token\"\"\" Input: token = \"\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } ################################################################################################################### \"\"\"Error 4: wrong token\"\"\" Input: token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } POST /V1/Session This method creates an authentication token and starts a session with user's body information and netbrain server url. Detail Information Title : Log in API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session Authentication : Not Required. Request body( *required ) Name Type Description username* string the username to log into your NetBrain domain. password* string the password to log into your NetBrain domain. authentication_id string This body parameter is only required for an external user through SSO, LDAP/AD or TACACS and the value must same with the name of external authentication which the user created by admin role during system management under \"User Account\" section. Example : body = { \"username\": \"NetBrain\", \"password\": \"NetBrain\" } Parameters( *required ) No parameters required. Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Response Name Type Description token string The returned authentication token. statusCode integer The returned status code of executing the API. statusDescription string The explanation of the status code. Example : { 'token': 'fc6bc6ea-a46a-4e9b-8906-c623f78474b6', 'statusCode': 790200, 'statusDescription': 'Success.' } Full Example : # import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} try: # Do the HTTP request response = requests.post(full_url, headers=headers, data = json.dumps(body), verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Get token failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'token': '9b9715e8-7274-4a28-9692-e00ad315a283', 'statusCode': 790200, 'statusDescription': 'Success.'} Example For External user body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"net-brain\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} try: # Do the HTTP request response = requests.post(full_url, headers=headers, data = json.dumps(body), verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Get token failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'token': '5e9af6f4-efa8-4a19-9d42-add069c67c99', 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X POST \\ http://192.168.28.79/ServicesAPI/API/V1/Session \\ -H 'Accept: application/json' \\ -H 'Content-Type: application/json' \\ -H 'Postman-Token: ba5d854d-80ec-4a63-be98-65dc92c74a7a' \\ -H 'cache-control: no-cache' \\ -d '{ \"username\": \"Netbrain\", \"password\": \"Netbrain\" }' Error Example : ################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: body = { \"username\" : \"NetBrain\", \"password\" : \"NetBrain\" } full_url = \"\" Response: \"Invalid URL '': No schema supplied. Perhaps you meant http://?\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: body = { \"username\" : \"NetBrain\", \"password\" : \"NetBrain\" } full_url = \"http://IP address of your NetBrain Web API ServerXXXXXXXXXXX%%%%%%%%/ServicesAPI/API/V1/Session\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty body\"\"\" Input: body = { \"username\" : \"\", \"password\" : \"\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: \"Get token failed! - {\"statusCode\":795000,\"statusDescription\":\"Invalid username or password.\"}\" ################################################################################################################### \"\"\"Error 4: wrong body information\"\"\" Input: body = { \"username\" : \"wwwwwww\", \"password\" : \"wwwwwww\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: \"Get token failed! - {\"statusCode\":795000,\"statusDescription\":\"Invalid username or password.\"}\" ################################################################################################################### \"\"\"Error 4: for external user, empty authentication id\"\"\" Input: body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795000, \"statusDescription\": \"Invalid username or password.\" } ################################################################################################################### \"\"\"Error 4: for external user, wrong authentication id\"\"\" Input: body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"XXXXXXXXX\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795000, \"statusDescription\": \"Invalid username or password.\" } DELETE /V1/Session Use this API to log out from the current session. Detail Information Title : Log out API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/Session Authentication : Type In Name Bearer Authentication Headers Authentication token Request body( *required ) No request body. Parameters( *required ) No parameters required. Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token string Authentication token, get from login API. Response Name Type Description statusCode integer The returned status code of executing the API. statusDescription string The explanation of the status code. Example : { \"statusCode\": 790200, \"statusDescription\": \"Success.\" } Full Example : # import python modules import requests import time import urllib3 import pprint urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"token\"] = token try: # Do the HTTP request response = requests.delete(full_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Session logout failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X DELETE \\ http://192.168.28.79/ServicesAPI/API/V1/Session \\ -H 'Postman-Token: d6de8cb3-ca3b-4bde-b9c7-be800e902d2c' \\ -H 'cache-control: no-cache' \\ -H 'token: 7480e46f-6a25-470e-9c61-351f6b7d86fa' Error Exampes ################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"\" Response: \"Invalid URL '': No schema supplied. Perhaps you meant http://?\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"http://IP address of your NetBrain Web API Serveraaaaaaaaaaaaaa/ServicesAPI/API/V1/Session\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty token\"\"\" Input: token = \"\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } ################################################################################################################### \"\"\"Error 4: wrong token\"\"\" Input: token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } PUT /V1/Session/CurrentDomain Use this API to specify a domain to work on to get or set NetBrain data by associating domainID to the current session. Detail Information Title : Specify a domain to work on API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/Session/CurrentDomain Authentication : Type In Name Bearer Authentication Parameters Authentication token Request body( *required ) Name Type Description tenantId* string Unique identifier for the tenant from which you desire to retrieve the domain information. tenantId can be retrieved from get all accessible tenants. domainId string Input the ID of the target domain. Get a domain ID by using the API Get all accessible domains of a tenant. Note : This parameter is optioanl if the following operations aim only on tenant. Example { \"tenantId\": \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\", \"domainId\": \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" } Parameters( *required ) No parameters required. Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token string Authentication token, get from login API. ### Response Name Type Description statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { \"statusCode\": 790200, \"statusDescription\": \"Success.\" } Full Example : # import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" domainId = \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token body = { \"tenantId\": tenantId, \"domainId\": domainId } try: # Do the HTTP request response = requests.put(full_url, data=json.dumps(body), headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) elif response.status_code != 200: print (\"Login failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'statusCode': 790200, 'statusDescription': 'Success.'} # cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains?token=c00de805-9210-44a9-9a26-f0c1e944ea36&tenantId=fb24f3f0-81a7-1929-4b8f-99106c23fa5b' \\ -H 'Postman-Token: ee6dda7c-cbcc-43b8-8957-9c4f2d2a4b5b' \\ -H 'cache-control: no-cache' ## Error Examples: ################################################################################################################### \"\"\"Error 1: empty tenantId and domainId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"\" domainId = \"\" Response: \"{ \"statusCode\": 791000, \"statusDescription\": \"Null parameter: the parameter 'tenantId' cannot be null.\" }\" ################################################################################################################### \"\"\"Error 1: wrong tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" domainId = \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" Response: \"{ \"statusCode\": 791004, \"statusDescription\": \"Invalid tenant id.\" }\"","title":"Authentication and Authorization"},{"location":"Authentication and Authorization/#authentication-and-authorization-api","text":"","title":"Authentication and Authorization API"},{"location":"Authentication and Authorization/#get-v1cmdbdomainstenantid","text":"Use this function returns a list of accessible domains in a specific tenant. The returned accessible domains vary by the user privileges you use to log in. To retrieve a full list of domains in a specified tenant, you must log in with system admin or tenant admin permissions.","title":"GET /V1/CMDB/Domains/{?tenantId}"},{"location":"Authentication and Authorization/#detail-information","text":"Title : Get all accessible domains of a tenants API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/CMDB/Domains Authentication : Type In Name Bearer Authentication Parameters Authentication token ### Request body( *required ) No request body. ### Query Parameters( *required ) Name Type Description tenantId* string Unique identifier for the tenant from which you desire to retrieve the domain information. tenantId can be retrieved from get all accessible tenants. Note: If user don't have the privilege to visit all tenants, specific tenantId is required for this API. ### Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API. ### Response Name Type Description domains array A list of all accessible domains. domainId string The domain ID. domainName string The domain name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { 'domains': [ { 'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service' }, { 'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test' } ], 'statusCode': 790200, 'statusDescription': 'Success.' } ### Full Example : # import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token data = {\"tenantId\": tenantId} try: # Do the HTTP request response = requests.get(full_url, params=data, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get domains failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'domains': [{'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service'}, {'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test'}], 'statusCode': 790200, 'statusDescription': 'Success.'}","title":"Detail Information"},{"location":"Authentication and Authorization/#curl-code-from-postman","text":"curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains?token=c00de805-9210-44a9-9a26-f0c1e944ea36&tenantId=fb24f3f0-81a7-1929-4b8f-99106c23fa5b' \\ -H 'Postman-Token: ee6dda7c-cbcc-43b8-8957-9c4f2d2a4b5b' \\ -H 'cache-control: no-cache'","title":"cURL Code from Postman"},{"location":"Authentication and Authorization/#error-examples","text":"################################################################################################################### \"\"\"Error 1: empty tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"{'domains': [], 'statusCode': 790200, 'statusDescription': 'Success.'}\" ################################################################################################################### \"\"\"Error 2: wrong tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"\"\"Get domains failed! - {\"statusCode\":791006, \"statusDescription\":\"tenant with id aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa does not exist.\"}\"\"\"","title":"Error Examples"},{"location":"Authentication and Authorization/#get-v1cmdbtenants","text":"This method returns a list of accessible tenants (including tenant ID and names). The returned tenants list varies by the privileges of different user roles. To retrieve a full list of all available tenants, users must log in with admin role.","title":"GET /V1/CMDB/Tenants/"},{"location":"Authentication and Authorization/#detail-information_1","text":"Title : Get All Asseccible Tenants API Version : 01/23/2019. API Server URL : http(s):// < NetBrain Web API Server Address > /ServicesAPI/API/V1/CMDB/Tenants Authentication : Type In Name Bearer Authentication Parameters Authentication token","title":"Detail Information"},{"location":"Authentication and Authorization/#request-bodyrequired","text":"No request body.","title":"Request body(*required)"},{"location":"Authentication and Authorization/#parametersrequired","text":"No parameters required","title":"Parameters(*required)"},{"location":"Authentication and Authorization/#headers","text":"Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API.","title":"Headers"},{"location":"Authentication and Authorization/#response","text":"Name Type Description tenants array A list of all accessible tenants. tenantId string The tenant ID. tenantName string The tenant name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example : { 'tenants': [ { 'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant' } ], 'statusCode': 790200, 'statusDescription': 'Success.' }","title":"Response"},{"location":"Authentication and Authorization/#full-example","text":"# import python modules import json import requests import time import urllib3 import pprint urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token try: # Do the HTTP request response = requests.get(full_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get tenants failed! - \" + str(response.text)) except Exception as e: return (str(e)) {'tenants': [{'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant'}], 'statusCode': 790200, 'statusDescription': 'Success.'}","title":"Full Example :"},{"location":"Authentication and Authorization/#curl-code-from-postman_1","text":"curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants?token=c00de805-9210-44a9-9a26-f0c1e944ea36' \\ -H 'Postman-Token: b3ecf2c4-d94a-4059-a01f-bcd21fc8a286' \\ -H 'cache-control: no-cache'","title":"cURL Code from Postman"},{"location":"Authentication and Authorization/#error-example","text":"################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"\" Response: \"Invalid URL'': No schema supplied. Perhaps you meant http://\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.1688.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty token\"\"\" Input: token = \"\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } ################################################################################################################### \"\"\"Error 4: wrong token\"\"\" Input: token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. }","title":"Error Example :"},{"location":"Authentication and Authorization/#post-v1session","text":"This method creates an authentication token and starts a session with user's body information and netbrain server url.","title":"POST /V1/Session"},{"location":"Authentication and Authorization/#detail-information_2","text":"Title : Log in API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session Authentication : Not Required.","title":"Detail Information"},{"location":"Authentication and Authorization/#request-bodyrequired_1","text":"Name Type Description username* string the username to log into your NetBrain domain. password* string the password to log into your NetBrain domain. authentication_id string This body parameter is only required for an external user through SSO, LDAP/AD or TACACS and the value must same with the name of external authentication which the user created by admin role during system management under \"User Account\" section. Example : body = { \"username\": \"NetBrain\", \"password\": \"NetBrain\" }","title":"Request body(*required)"},{"location":"Authentication and Authorization/#parametersrequired_1","text":"No parameters required.","title":"Parameters(*required)"},{"location":"Authentication and Authorization/#headers_1","text":"Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\"","title":"Headers"},{"location":"Authentication and Authorization/#response_1","text":"Name Type Description token string The returned authentication token. statusCode integer The returned status code of executing the API. statusDescription string The explanation of the status code. Example : { 'token': 'fc6bc6ea-a46a-4e9b-8906-c623f78474b6', 'statusCode': 790200, 'statusDescription': 'Success.' }","title":"Response"},{"location":"Authentication and Authorization/#full-example_1","text":"# import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} try: # Do the HTTP request response = requests.post(full_url, headers=headers, data = json.dumps(body), verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Get token failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'token': '9b9715e8-7274-4a28-9692-e00ad315a283', 'statusCode': 790200, 'statusDescription': 'Success.'}","title":"Full Example :"},{"location":"Authentication and Authorization/#example-for-external-user","text":"body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"net-brain\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} try: # Do the HTTP request response = requests.post(full_url, headers=headers, data = json.dumps(body), verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Get token failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'token': '5e9af6f4-efa8-4a19-9d42-add069c67c99', 'statusCode': 790200, 'statusDescription': 'Success.'}","title":"Example For External user"},{"location":"Authentication and Authorization/#curl-code-from-postman_2","text":"curl -X POST \\ http://192.168.28.79/ServicesAPI/API/V1/Session \\ -H 'Accept: application/json' \\ -H 'Content-Type: application/json' \\ -H 'Postman-Token: ba5d854d-80ec-4a63-be98-65dc92c74a7a' \\ -H 'cache-control: no-cache' \\ -d '{ \"username\": \"Netbrain\", \"password\": \"Netbrain\" }'","title":"cURL Code from Postman"},{"location":"Authentication and Authorization/#error-example_1","text":"################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: body = { \"username\" : \"NetBrain\", \"password\" : \"NetBrain\" } full_url = \"\" Response: \"Invalid URL '': No schema supplied. Perhaps you meant http://?\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: body = { \"username\" : \"NetBrain\", \"password\" : \"NetBrain\" } full_url = \"http://IP address of your NetBrain Web API ServerXXXXXXXXXXX%%%%%%%%/ServicesAPI/API/V1/Session\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty body\"\"\" Input: body = { \"username\" : \"\", \"password\" : \"\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: \"Get token failed! - {\"statusCode\":795000,\"statusDescription\":\"Invalid username or password.\"}\" ################################################################################################################### \"\"\"Error 4: wrong body information\"\"\" Input: body = { \"username\" : \"wwwwwww\", \"password\" : \"wwwwwww\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: \"Get token failed! - {\"statusCode\":795000,\"statusDescription\":\"Invalid username or password.\"}\" ################################################################################################################### \"\"\"Error 4: for external user, empty authentication id\"\"\" Input: body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795000, \"statusDescription\": \"Invalid username or password.\" } ################################################################################################################### \"\"\"Error 4: for external user, wrong authentication id\"\"\" Input: body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"XXXXXXXXX\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795000, \"statusDescription\": \"Invalid username or password.\" }","title":"Error Example :"},{"location":"Authentication and Authorization/#delete-v1session","text":"Use this API to log out from the current session.","title":"DELETE /V1/Session"},{"location":"Authentication and Authorization/#detail-information_3","text":"Title : Log out API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/Session Authentication : Type In Name Bearer Authentication Headers Authentication token","title":"Detail Information"},{"location":"Authentication and Authorization/#request-bodyrequired_2","text":"No request body.","title":"Request body(*required)"},{"location":"Authentication and Authorization/#parametersrequired_2","text":"No parameters required.","title":"Parameters(*required)"},{"location":"Authentication and Authorization/#headers_2","text":"Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token string Authentication token, get from login API.","title":"Headers"},{"location":"Authentication and Authorization/#response_2","text":"Name Type Description statusCode integer The returned status code of executing the API. statusDescription string The explanation of the status code. Example : { \"statusCode\": 790200, \"statusDescription\": \"Success.\" }","title":"Response"},{"location":"Authentication and Authorization/#full-example_2","text":"# import python modules import requests import time import urllib3 import pprint urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"token\"] = token try: # Do the HTTP request response = requests.delete(full_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Session logout failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'statusCode': 790200, 'statusDescription': 'Success.'}","title":"Full Example :"},{"location":"Authentication and Authorization/#curl-code-from-postman_3","text":"curl -X DELETE \\ http://192.168.28.79/ServicesAPI/API/V1/Session \\ -H 'Postman-Token: d6de8cb3-ca3b-4bde-b9c7-be800e902d2c' \\ -H 'cache-control: no-cache' \\ -H 'token: 7480e46f-6a25-470e-9c61-351f6b7d86fa'","title":"cURL Code from Postman"},{"location":"Authentication and Authorization/#error-exampes","text":"################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"\" Response: \"Invalid URL '': No schema supplied. Perhaps you meant http://?\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"http://IP address of your NetBrain Web API Serveraaaaaaaaaaaaaa/ServicesAPI/API/V1/Session\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty token\"\"\" Input: token = \"\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } ################################################################################################################### \"\"\"Error 4: wrong token\"\"\" Input: token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. }","title":"Error Exampes"},{"location":"Authentication and Authorization/#put-v1sessioncurrentdomain","text":"Use this API to specify a domain to work on to get or set NetBrain data by associating domainID to the current session.","title":"PUT /V1/Session/CurrentDomain"},{"location":"Authentication and Authorization/#detail-information_4","text":"Title : Specify a domain to work on API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/Session/CurrentDomain Authentication : Type In Name Bearer Authentication Parameters Authentication token","title":"Detail Information"},{"location":"Authentication and Authorization/#request-bodyrequired_3","text":"Name Type Description tenantId* string Unique identifier for the tenant from which you desire to retrieve the domain information. tenantId can be retrieved from get all accessible tenants. domainId string Input the ID of the target domain. Get a domain ID by using the API Get all accessible domains of a tenant. Note : This parameter is optioanl if the following operations aim only on tenant.","title":"Request body(*required)"},{"location":"Authentication and Authorization/#example","text":"{ \"tenantId\": \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\", \"domainId\": \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" }","title":"Example"},{"location":"Authentication and Authorization/#parametersrequired_3","text":"No parameters required.","title":"Parameters(*required)"},{"location":"Authentication and Authorization/#headers_3","text":"Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token string Authentication token, get from login API. ### Response Name Type Description statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { \"statusCode\": 790200, \"statusDescription\": \"Success.\" }","title":"Headers"},{"location":"Authentication and Authorization/#full-example_3","text":"# import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" domainId = \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token body = { \"tenantId\": tenantId, \"domainId\": domainId } try: # Do the HTTP request response = requests.put(full_url, data=json.dumps(body), headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) elif response.status_code != 200: print (\"Login failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'statusCode': 790200, 'statusDescription': 'Success.'} # cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains?token=c00de805-9210-44a9-9a26-f0c1e944ea36&tenantId=fb24f3f0-81a7-1929-4b8f-99106c23fa5b' \\ -H 'Postman-Token: ee6dda7c-cbcc-43b8-8957-9c4f2d2a4b5b' \\ -H 'cache-control: no-cache' ## Error Examples: ################################################################################################################### \"\"\"Error 1: empty tenantId and domainId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"\" domainId = \"\" Response: \"{ \"statusCode\": 791000, \"statusDescription\": \"Null parameter: the parameter 'tenantId' cannot be null.\" }\" ################################################################################################################### \"\"\"Error 1: wrong tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" domainId = \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" Response: \"{ \"statusCode\": 791004, \"statusDescription\": \"Invalid tenant id.\" }\"","title":"Full Example :"}]}