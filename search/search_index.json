{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"NetBrain REST API Documentation Netbrain provide all available REST APIs in this repository. We offer two sections in current repo. First section describe the workflow of five customer use cases with API multiple calling. Second section elaborate the detail information for each API. We provide resonable explanations and clear sample code in both sections. We hope users can understand the different features of different APIs and construct a concept to solve some use cases by multi-calling Netbrain REST APIs. Authentication and Authorization","title":"Home"},{"location":"#netbrain-rest-api-documentation","text":"Netbrain provide all available REST APIs in this repository. We offer two sections in current repo. First section describe the workflow of five customer use cases with API multiple calling. Second section elaborate the detail information for each API. We provide resonable explanations and clear sample code in both sections. We hope users can understand the different features of different APIs and construct a concept to solve some use cases by multi-calling Netbrain REST APIs. Authentication and Authorization","title":"NetBrain REST API Documentation"},{"location":"Authentication and Authorization/","text":"Authentication and Authorization API GET /V1/CMDB/Domains/{?tenantId} Use this function returns a list of accessible domains in a specific tenant. The returned accessible domains vary by the user privileges you use to log in. To retrieve a full list of domains in a specified tenant, you must log in with system admin or tenant admin permissions. Detail Information Title : Get all accessible domains of a tenants API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/CMDB/Domains Authentication : Type In Name Bearer Authentication Parameters Authentication token Request body( *required ) No request body. Query Parameters( *required ) Name Type Description tenantId* string Unique identifier for the tenant from which you desire to retrieve the domain information. tenantId can be retrieved from get all accessible tenants. Note: If user don't have the privilege to visit all tenants, specific tenantId is required for this API. Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API. Response Name Type Description domains array A list of all accessible domains. domainId string The domain ID. domainName string The domain name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { 'domains': [ { 'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service' }, { 'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test' } ], 'statusCode': 790200, 'statusDescription': 'Success.' } Full Example # import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token data = {\"tenantId\": tenantId} try: # Do the HTTP request response = requests.get(full_url, params=data, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get domains failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'domains': [{'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service'}, {'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test'}], 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains?token=c00de805-9210-44a9-9a26-f0c1e944ea36&tenantId=fb24f3f0-81a7-1929-4b8f-99106c23fa5b' \\ -H 'Postman-Token: ee6dda7c-cbcc-43b8-8957-9c4f2d2a4b5b' \\ -H 'cache-control: no-cache' Error Examples ################################################################################################################### \"\"\"Error 1: empty tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"{'domains': [], 'statusCode': 790200, 'statusDescription': 'Success.'}\" ################################################################################################################### \"\"\"Error 2: wrong tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"\"\"Get domains failed! - {\"statusCode\":791006, \"statusDescription\":\"tenant with id aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa does not exist.\"}\"\"\" GET /V1/CMDB/Tenants/ This method returns a list of accessible tenants (including tenant ID and names). The returned tenants list varies by the privileges of different user roles. To retrieve a full list of all available tenants, users must log in with admin role. Detail Information Title : Get All Asseccible Tenants API Version : 01/23/2019. API Server URL : http(s):// < NetBrain Web API Server Address > /ServicesAPI/API/V1/CMDB/Tenants Authentication : Type In Name Bearer Authentication Parameters Authentication token Request body( *required ) No request body. Parameters( *required ) No parameters required Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API. Response Name Type Description tenants array A list of all accessible tenants. tenantId string The tenant ID. tenantName string The tenant name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example : { 'tenants': [ { 'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant' } ], 'statusCode': 790200, 'statusDescription': 'Success.' } Full Example # import python modules import json import requests import time import urllib3 import pprint urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token try: # Do the HTTP request response = requests.get(full_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get tenants failed! - \" + str(response.text)) except Exception as e: return (str(e)) {'tenants': [{'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant'}], 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants?token=c00de805-9210-44a9-9a26-f0c1e944ea36' \\ -H 'Postman-Token: b3ecf2c4-d94a-4059-a01f-bcd21fc8a286' \\ -H 'cache-control: no-cache' Error Example : ################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"\" Response: \"Invalid URL'': No schema supplied. Perhaps you meant http://\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.1688.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty token\"\"\" Input: token = \"\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } ################################################################################################################### \"\"\"Error 4: wrong token\"\"\" Input: token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } POST /V1/Session This method creates an authentication token and starts a session with user's body information and netbrain server url. Detail Information Title : Log in API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session Authentication : Not Required. Request body( *required ) Name Type Description username* string the username to log into your NetBrain domain. password* string the password to log into your NetBrain domain. authentication_id string This body parameter is only required for an external user through SSO, LDAP/AD or TACACS and the value must same with the name of external authentication which the user created by admin role during system management under \"User Account\" section. Example : body = { \"username\": \"NetBrain\", \"password\": \"NetBrain\" } Parameters( *required ) No parameters required. Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Response Name Type Description token string The returned authentication token. statusCode integer The returned status code of executing the API. statusDescription string The explanation of the status code. Example : { 'token': 'fc6bc6ea-a46a-4e9b-8906-c623f78474b6', 'statusCode': 790200, 'statusDescription': 'Success.' } Full Example # import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} try: # Do the HTTP request response = requests.post(full_url, headers=headers, data = json.dumps(body), verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Get token failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'token': '9b9715e8-7274-4a28-9692-e00ad315a283', 'statusCode': 790200, 'statusDescription': 'Success.'} Example For External user body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"net-brain\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} try: # Do the HTTP request response = requests.post(full_url, headers=headers, data = json.dumps(body), verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Get token failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'token': '5e9af6f4-efa8-4a19-9d42-add069c67c99', 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X POST \\ http://192.168.28.79/ServicesAPI/API/V1/Session \\ -H 'Accept: application/json' \\ -H 'Content-Type: application/json' \\ -H 'Postman-Token: ba5d854d-80ec-4a63-be98-65dc92c74a7a' \\ -H 'cache-control: no-cache' \\ -d '{ \"username\": \"Netbrain\", \"password\": \"Netbrain\" }' Error Example : ################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: body = { \"username\" : \"NetBrain\", \"password\" : \"NetBrain\" } full_url = \"\" Response: \"Invalid URL '': No schema supplied. Perhaps you meant http://?\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: body = { \"username\" : \"NetBrain\", \"password\" : \"NetBrain\" } full_url = \"http://IP address of your NetBrain Web API ServerXXXXXXXXXXX%%%%%%%%/ServicesAPI/API/V1/Session\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty body\"\"\" Input: body = { \"username\" : \"\", \"password\" : \"\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: \"Get token failed! - {\"statusCode\":795000,\"statusDescription\":\"Invalid username or password.\"}\" ################################################################################################################### \"\"\"Error 4: wrong body information\"\"\" Input: body = { \"username\" : \"wwwwwww\", \"password\" : \"wwwwwww\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: \"Get token failed! - {\"statusCode\":795000,\"statusDescription\":\"Invalid username or password.\"}\" ################################################################################################################### \"\"\"Error 4: for external user, empty authentication id\"\"\" Input: body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795000, \"statusDescription\": \"Invalid username or password.\" } ################################################################################################################### \"\"\"Error 4: for external user, wrong authentication id\"\"\" Input: body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"XXXXXXXXX\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795000, \"statusDescription\": \"Invalid username or password.\" } DELETE /V1/Session Use this API to log out from the current session. Detail Information Title : Log out API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/Session Authentication : Type In Name Bearer Authentication Headers Authentication token Request body( *required ) No request body. Parameters( *required ) No parameters required. Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token string Authentication token, get from login API. Response Name Type Description statusCode integer The returned status code of executing the API. statusDescription string The explanation of the status code. Example : { \"statusCode\": 790200, \"statusDescription\": \"Success.\" } Full Example # import python modules import requests import time import urllib3 import pprint urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"token\"] = token try: # Do the HTTP request response = requests.delete(full_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Session logout failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X DELETE \\ http://192.168.28.79/ServicesAPI/API/V1/Session \\ -H 'Postman-Token: d6de8cb3-ca3b-4bde-b9c7-be800e902d2c' \\ -H 'cache-control: no-cache' \\ -H 'token: 7480e46f-6a25-470e-9c61-351f6b7d86fa' Error Exampes ################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"\" Response: \"Invalid URL '': No schema supplied. Perhaps you meant http://?\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"http://IP address of your NetBrain Web API Serveraaaaaaaaaaaaaa/ServicesAPI/API/V1/Session\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty token\"\"\" Input: token = \"\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } ################################################################################################################### \"\"\"Error 4: wrong token\"\"\" Input: token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } PUT /V1/Session/CurrentDomain Use this API to specify a domain to work on to get or set NetBrain data by associating domainID to the current session. Detail Information Title : Specify a domain to work on API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/Session/CurrentDomain Authentication : Type In Name Bearer Authentication Parameters Authentication token Request body( *required ) Name Type Description tenantId* string Unique identifier for the tenant from which you desire to retrieve the domain information. tenantId can be retrieved from get all accessible tenants. domainId string Input the ID of the target domain. Get a domain ID by using the API Get all accessible domains of a tenant. Note : This parameter is optioanl if the following operations aim only on tenant. Example { \"tenantId\": \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\", \"domainId\": \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" } Parameters( *required ) No parameters required. Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token string Authentication token, get from login API. Response Name Type Description statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { \"statusCode\": 790200, \"statusDescription\": \"Success.\" } Full Example # import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" domainId = \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token body = { \"tenantId\": tenantId, \"domainId\": domainId } try: # Do the HTTP request response = requests.put(full_url, data=json.dumps(body), headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) elif response.status_code != 200: print (\"Login failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains?token=c00de805-9210-44a9-9a26-f0c1e944ea36&tenantId=fb24f3f0-81a7-1929-4b8f-99106c23fa5b' \\ -H 'Postman-Token: ee6dda7c-cbcc-43b8-8957-9c4f2d2a4b5b' \\ -H 'cache-control: no-cache' Error Examples: ################################################################################################################### \"\"\"Error 1: empty tenantId and domainId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"\" domainId = \"\" Response: \"{ \"statusCode\": 791000, \"statusDescription\": \"Null parameter: the parameter 'tenantId' cannot be null.\" }\" ################################################################################################################### \"\"\"Error 1: wrong tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" domainId = \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" Response: \"{ \"statusCode\": 791004, \"statusDescription\": \"Invalid tenant id.\" }\"","title":"Authentication and Authorization"},{"location":"Authentication and Authorization/#authentication-and-authorization-api","text":"","title":"Authentication and Authorization API"},{"location":"Authentication and Authorization/#get-v1cmdbdomainstenantid","text":"Use this function returns a list of accessible domains in a specific tenant. The returned accessible domains vary by the user privileges you use to log in. To retrieve a full list of domains in a specified tenant, you must log in with system admin or tenant admin permissions.","title":"GET /V1/CMDB/Domains/{?tenantId}"},{"location":"Authentication and Authorization/#detail-information","text":"Title : Get all accessible domains of a tenants API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/CMDB/Domains Authentication : Type In Name Bearer Authentication Parameters Authentication token","title":"Detail Information"},{"location":"Authentication and Authorization/#request-bodyrequired","text":"No request body.","title":"Request body(*required)"},{"location":"Authentication and Authorization/#query-parametersrequired","text":"Name Type Description tenantId* string Unique identifier for the tenant from which you desire to retrieve the domain information. tenantId can be retrieved from get all accessible tenants. Note: If user don't have the privilege to visit all tenants, specific tenantId is required for this API.","title":"Query Parameters(*required)"},{"location":"Authentication and Authorization/#headers","text":"Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API.","title":"Headers"},{"location":"Authentication and Authorization/#response","text":"Name Type Description domains array A list of all accessible domains. domainId string The domain ID. domainName string The domain name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { 'domains': [ { 'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service' }, { 'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test' } ], 'statusCode': 790200, 'statusDescription': 'Success.' }","title":"Response"},{"location":"Authentication and Authorization/#full-example","text":"# import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token data = {\"tenantId\": tenantId} try: # Do the HTTP request response = requests.get(full_url, params=data, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get domains failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'domains': [{'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service'}, {'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test'}], 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains?token=c00de805-9210-44a9-9a26-f0c1e944ea36&tenantId=fb24f3f0-81a7-1929-4b8f-99106c23fa5b' \\ -H 'Postman-Token: ee6dda7c-cbcc-43b8-8957-9c4f2d2a4b5b' \\ -H 'cache-control: no-cache' Error Examples ################################################################################################################### \"\"\"Error 1: empty tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"{'domains': [], 'statusCode': 790200, 'statusDescription': 'Success.'}\" ################################################################################################################### \"\"\"Error 2: wrong tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"\"\"Get domains failed! - {\"statusCode\":791006, \"statusDescription\":\"tenant with id aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa does not exist.\"}\"\"\"","title":"Full Example"},{"location":"Authentication and Authorization/#get-v1cmdbtenants","text":"This method returns a list of accessible tenants (including tenant ID and names). The returned tenants list varies by the privileges of different user roles. To retrieve a full list of all available tenants, users must log in with admin role.","title":"GET /V1/CMDB/Tenants/"},{"location":"Authentication and Authorization/#detail-information_1","text":"Title : Get All Asseccible Tenants API Version : 01/23/2019. API Server URL : http(s):// < NetBrain Web API Server Address > /ServicesAPI/API/V1/CMDB/Tenants Authentication : Type In Name Bearer Authentication Parameters Authentication token","title":"Detail Information"},{"location":"Authentication and Authorization/#request-bodyrequired_1","text":"No request body.","title":"Request body(*required)"},{"location":"Authentication and Authorization/#parametersrequired","text":"No parameters required","title":"Parameters(*required)"},{"location":"Authentication and Authorization/#headers_1","text":"Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API.","title":"Headers"},{"location":"Authentication and Authorization/#response_1","text":"Name Type Description tenants array A list of all accessible tenants. tenantId string The tenant ID. tenantName string The tenant name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example : { 'tenants': [ { 'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant' } ], 'statusCode': 790200, 'statusDescription': 'Success.' }","title":"Response"},{"location":"Authentication and Authorization/#full-example_1","text":"# import python modules import json import requests import time import urllib3 import pprint urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token try: # Do the HTTP request response = requests.get(full_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get tenants failed! - \" + str(response.text)) except Exception as e: return (str(e)) {'tenants': [{'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant'}], 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants?token=c00de805-9210-44a9-9a26-f0c1e944ea36' \\ -H 'Postman-Token: b3ecf2c4-d94a-4059-a01f-bcd21fc8a286' \\ -H 'cache-control: no-cache' Error Example : ################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"\" Response: \"Invalid URL'': No schema supplied. Perhaps you meant http://\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.1688.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty token\"\"\" Input: token = \"\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } ################################################################################################################### \"\"\"Error 4: wrong token\"\"\" Input: token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. }","title":"Full Example"},{"location":"Authentication and Authorization/#post-v1session","text":"This method creates an authentication token and starts a session with user's body information and netbrain server url.","title":"POST /V1/Session"},{"location":"Authentication and Authorization/#detail-information_2","text":"Title : Log in API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session Authentication : Not Required.","title":"Detail Information"},{"location":"Authentication and Authorization/#request-bodyrequired_2","text":"Name Type Description username* string the username to log into your NetBrain domain. password* string the password to log into your NetBrain domain. authentication_id string This body parameter is only required for an external user through SSO, LDAP/AD or TACACS and the value must same with the name of external authentication which the user created by admin role during system management under \"User Account\" section. Example : body = { \"username\": \"NetBrain\", \"password\": \"NetBrain\" }","title":"Request body(*required)"},{"location":"Authentication and Authorization/#parametersrequired_1","text":"No parameters required.","title":"Parameters(*required)"},{"location":"Authentication and Authorization/#headers_2","text":"Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\"","title":"Headers"},{"location":"Authentication and Authorization/#response_2","text":"Name Type Description token string The returned authentication token. statusCode integer The returned status code of executing the API. statusDescription string The explanation of the status code. Example : { 'token': 'fc6bc6ea-a46a-4e9b-8906-c623f78474b6', 'statusCode': 790200, 'statusDescription': 'Success.' }","title":"Response"},{"location":"Authentication and Authorization/#full-example_2","text":"# import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} try: # Do the HTTP request response = requests.post(full_url, headers=headers, data = json.dumps(body), verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Get token failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'token': '9b9715e8-7274-4a28-9692-e00ad315a283', 'statusCode': 790200, 'statusDescription': 'Success.'} Example For External user body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"net-brain\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} try: # Do the HTTP request response = requests.post(full_url, headers=headers, data = json.dumps(body), verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Get token failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'token': '5e9af6f4-efa8-4a19-9d42-add069c67c99', 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X POST \\ http://192.168.28.79/ServicesAPI/API/V1/Session \\ -H 'Accept: application/json' \\ -H 'Content-Type: application/json' \\ -H 'Postman-Token: ba5d854d-80ec-4a63-be98-65dc92c74a7a' \\ -H 'cache-control: no-cache' \\ -d '{ \"username\": \"Netbrain\", \"password\": \"Netbrain\" }' Error Example : ################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: body = { \"username\" : \"NetBrain\", \"password\" : \"NetBrain\" } full_url = \"\" Response: \"Invalid URL '': No schema supplied. Perhaps you meant http://?\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: body = { \"username\" : \"NetBrain\", \"password\" : \"NetBrain\" } full_url = \"http://IP address of your NetBrain Web API ServerXXXXXXXXXXX%%%%%%%%/ServicesAPI/API/V1/Session\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty body\"\"\" Input: body = { \"username\" : \"\", \"password\" : \"\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: \"Get token failed! - {\"statusCode\":795000,\"statusDescription\":\"Invalid username or password.\"}\" ################################################################################################################### \"\"\"Error 4: wrong body information\"\"\" Input: body = { \"username\" : \"wwwwwww\", \"password\" : \"wwwwwww\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: \"Get token failed! - {\"statusCode\":795000,\"statusDescription\":\"Invalid username or password.\"}\" ################################################################################################################### \"\"\"Error 4: for external user, empty authentication id\"\"\" Input: body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795000, \"statusDescription\": \"Invalid username or password.\" } ################################################################################################################### \"\"\"Error 4: for external user, wrong authentication id\"\"\" Input: body = { \"username\" : \"Netbrain\", \"password\" : \"Netbrain\", \"authentication_id\" : \"XXXXXXXXX\" } full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795000, \"statusDescription\": \"Invalid username or password.\" }","title":"Full Example"},{"location":"Authentication and Authorization/#delete-v1session","text":"Use this API to log out from the current session.","title":"DELETE /V1/Session"},{"location":"Authentication and Authorization/#detail-information_3","text":"Title : Log out API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/Session Authentication : Type In Name Bearer Authentication Headers Authentication token","title":"Detail Information"},{"location":"Authentication and Authorization/#request-bodyrequired_3","text":"No request body.","title":"Request body(*required)"},{"location":"Authentication and Authorization/#parametersrequired_2","text":"No parameters required.","title":"Parameters(*required)"},{"location":"Authentication and Authorization/#headers_3","text":"Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token string Authentication token, get from login API.","title":"Headers"},{"location":"Authentication and Authorization/#response_3","text":"Name Type Description statusCode integer The returned status code of executing the API. statusDescription string The explanation of the status code. Example : { \"statusCode\": 790200, \"statusDescription\": \"Success.\" }","title":"Response"},{"location":"Authentication and Authorization/#full-example_3","text":"# import python modules import requests import time import urllib3 import pprint urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"token\"] = token try: # Do the HTTP request response = requests.delete(full_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() print (js) else: print (\"Session logout failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X DELETE \\ http://192.168.28.79/ServicesAPI/API/V1/Session \\ -H 'Postman-Token: d6de8cb3-ca3b-4bde-b9c7-be800e902d2c' \\ -H 'cache-control: no-cache' \\ -H 'token: 7480e46f-6a25-470e-9c61-351f6b7d86fa' Error Exampes ################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"\" Response: \"Invalid URL '': No schema supplied. Perhaps you meant http://?\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: token = \"a63c6610-1a44-4907-bb57-784179d30ba3\" full_url = \"http://IP address of your NetBrain Web API Serveraaaaaaaaaaaaaa/ServicesAPI/API/V1/Session\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty token\"\"\" Input: token = \"\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } ################################################################################################################### \"\"\"Error 4: wrong token\"\"\" Input: token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/Session\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. }","title":"Full Example"},{"location":"Authentication and Authorization/#put-v1sessioncurrentdomain","text":"Use this API to specify a domain to work on to get or set NetBrain data by associating domainID to the current session.","title":"PUT /V1/Session/CurrentDomain"},{"location":"Authentication and Authorization/#detail-information_4","text":"Title : Specify a domain to work on API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/Session/CurrentDomain Authentication : Type In Name Bearer Authentication Parameters Authentication token","title":"Detail Information"},{"location":"Authentication and Authorization/#request-bodyrequired_4","text":"Name Type Description tenantId* string Unique identifier for the tenant from which you desire to retrieve the domain information. tenantId can be retrieved from get all accessible tenants. domainId string Input the ID of the target domain. Get a domain ID by using the API Get all accessible domains of a tenant. Note : This parameter is optioanl if the following operations aim only on tenant. Example { \"tenantId\": \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\", \"domainId\": \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" }","title":"Request body(*required)"},{"location":"Authentication and Authorization/#parametersrequired_3","text":"No parameters required.","title":"Parameters(*required)"},{"location":"Authentication and Authorization/#headers_4","text":"Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token string Authentication token, get from login API.","title":"Headers"},{"location":"Authentication and Authorization/#response_4","text":"Name Type Description statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { \"statusCode\": 790200, \"statusDescription\": \"Success.\" }","title":"Response"},{"location":"Authentication and Authorization/#full-example_4","text":"# import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" domainId = \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token body = { \"tenantId\": tenantId, \"domainId\": domainId } try: # Do the HTTP request response = requests.put(full_url, data=json.dumps(body), headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) elif response.status_code != 200: print (\"Login failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains?token=c00de805-9210-44a9-9a26-f0c1e944ea36&tenantId=fb24f3f0-81a7-1929-4b8f-99106c23fa5b' \\ -H 'Postman-Token: ee6dda7c-cbcc-43b8-8957-9c4f2d2a4b5b' \\ -H 'cache-control: no-cache' Error Examples: ################################################################################################################### \"\"\"Error 1: empty tenantId and domainId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"\" domainId = \"\" Response: \"{ \"statusCode\": 791000, \"statusDescription\": \"Null parameter: the parameter 'tenantId' cannot be null.\" }\" ################################################################################################################### \"\"\"Error 1: wrong tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/Session/CurrentDomain\" tenantId = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" domainId = \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" Response: \"{ \"statusCode\": 791004, \"statusDescription\": \"Invalid tenant id.\" }\"","title":"Full Example"},{"location":"Get All Accessible Domains API/","text":"Authentication and Authorization API GET /V1/CMDB/Domains/{?tenantId} Use this function returns a list of accessible domains in a specific tenant. The returned accessible domains vary by the user privileges you use to log in. To retrieve a full list of domains in a specified tenant, you must log in with system admin or tenant admin permissions. Detail Information Title : Get all accessible domains of a tenants API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/CMDB/Domains Authentication : Type In Name Bearer Authentication Parameters Authentication token ## Request body( *required ) No request body. ## Query Parameters( *required ) Name Type Description tenantId* string Unique identifier for the tenant from which you desire to retrieve the domain information. tenantId can be retrieved from get all accessible tenants. Note: If user don't have the privilege to visit all tenants, specific tenantId is required for this API. ## Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API. ## Response Name Type Description domains array A list of all accessible domains. domainId string The domain ID. domainName string The domain name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { 'domains': [ { 'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service' }, { 'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test' } ], 'statusCode': 790200, 'statusDescription': 'Success.' } ## Full Example : # import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token data = {\"tenantId\": tenantId} try: # Do the HTTP request response = requests.get(full_url, params=data, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get domains failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'domains': [{'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service'}, {'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test'}], 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains?token=c00de805-9210-44a9-9a26-f0c1e944ea36&tenantId=fb24f3f0-81a7-1929-4b8f-99106c23fa5b' \\ -H 'Postman-Token: ee6dda7c-cbcc-43b8-8957-9c4f2d2a4b5b' \\ -H 'cache-control: no-cache' Error Examples ################################################################################################################### \"\"\"Error 1: empty tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"{'domains': [], 'statusCode': 790200, 'statusDescription': 'Success.'}\" ################################################################################################################### \"\"\"Error 2: wrong tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"\"\"Get domains failed! - {\"statusCode\":791006, \"statusDescription\":\"tenant with id aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa does not exist.\"}\"\"\"","title":"Authentication and Authorization API"},{"location":"Get All Accessible Domains API/#authentication-and-authorization-api","text":"","title":"Authentication and Authorization API"},{"location":"Get All Accessible Domains API/#get-v1cmdbdomainstenantid","text":"Use this function returns a list of accessible domains in a specific tenant. The returned accessible domains vary by the user privileges you use to log in. To retrieve a full list of domains in a specified tenant, you must log in with system admin or tenant admin permissions.","title":"GET /V1/CMDB/Domains/{?tenantId}"},{"location":"Get All Accessible Domains API/#detail-information","text":"Title : Get all accessible domains of a tenants API Version : 01/23/2019. API Server URL : http(s):// IP address of your NetBrain Web API Server /ServicesAPI/API/V1/CMDB/Domains Authentication : Type In Name Bearer Authentication Parameters Authentication token ## Request body( *required ) No request body. ## Query Parameters( *required ) Name Type Description tenantId* string Unique identifier for the tenant from which you desire to retrieve the domain information. tenantId can be retrieved from get all accessible tenants. Note: If user don't have the privilege to visit all tenants, specific tenantId is required for this API. ## Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API. ## Response Name Type Description domains array A list of all accessible domains. domainId string The domain ID. domainName string The domain name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { 'domains': [ { 'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service' }, { 'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test' } ], 'statusCode': 790200, 'statusDescription': 'Success.' } ## Full Example : # import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json # Set the request inputs token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token data = {\"tenantId\": tenantId} try: # Do the HTTP request response = requests.get(full_url, params=data, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get domains failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'domains': [{'domainId': '850ff5e9-c639-404d-85a3-d920dbee509c', 'domainName': 'Support and Service'}, {'domainId': '0201adc4-ae96-46f0-ae3d-01cdba9e41d6', 'domainName': 'GE Test'}], 'statusCode': 790200, 'statusDescription': 'Success.'}","title":"Detail Information"},{"location":"Get All Accessible Domains API/#curl-code-from-postman","text":"curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Domains?token=c00de805-9210-44a9-9a26-f0c1e944ea36&tenantId=fb24f3f0-81a7-1929-4b8f-99106c23fa5b' \\ -H 'Postman-Token: ee6dda7c-cbcc-43b8-8957-9c4f2d2a4b5b' \\ -H 'cache-control: no-cache'","title":"cURL Code from Postman"},{"location":"Get All Accessible Domains API/#error-examples","text":"################################################################################################################### \"\"\"Error 1: empty tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"{'domains': [], 'statusCode': 790200, 'statusDescription': 'Success.'}\" ################################################################################################################### \"\"\"Error 2: wrong tenantId\"\"\" Input: token = \"4f257785-d5f9-42d4-b896-d21f0cb62e6f\" tenantId = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://IP address of your NetBrain Web API Server/ServicesAPI/API/V1/CMDB/Domains\" Response: \"\"\"Get domains failed! - {\"statusCode\":791006, \"statusDescription\":\"tenant with id aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa does not exist.\"}\"\"\"","title":"Error Examples"},{"location":"Get All Accessible Tenants API/","text":"Authentication and Authorization API GET /V1/CMDB/Tenants/ This method returns a list of accessible tenants (including tenant ID and names). The returned tenants list varies by the privileges of different user roles. To retrieve a full list of all available tenants, users must log in with admin role. Detail Information Title : Get All Asseccible Tenants API Version : 01/23/2019. API Server URL : http(s):// < NetBrain Web API Server Address > /ServicesAPI/API/V1/CMDB/Tenants Authentication : Type In Name Bearer Authentication Parameters Authentication token Request body( *required ) No request body. ## Parameters( *required ) No parameters required ## Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API. ## Response Name Type Description tenants array A list of all accessible tenants. tenantId string The tenant ID. tenantName string The tenant name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example : { 'tenants': [ { 'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant' } ], 'statusCode': 790200, 'statusDescription': 'Success.' } Full Example : # import python modules import json import requests import time import urllib3 import pprint urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token try: # Do the HTTP request response = requests.get(full_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get tenants failed! - \" + str(response.text)) except Exception as e: return (str(e)) {'tenants': [{'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant'}], 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants?token=c00de805-9210-44a9-9a26-f0c1e944ea36' \\ -H 'Postman-Token: b3ecf2c4-d94a-4059-a01f-bcd21fc8a286' \\ -H 'cache-control: no-cache' Error Example : ################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"\" Response: \"Invalid URL'': No schema supplied. Perhaps you meant http://\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.1688.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty token\"\"\" Input: token = \"\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } ################################################################################################################### \"\"\"Error 4: wrong token\"\"\" Input: token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. }","title":"Authentication and Authorization API"},{"location":"Get All Accessible Tenants API/#authentication-and-authorization-api","text":"","title":"Authentication and Authorization API"},{"location":"Get All Accessible Tenants API/#get-v1cmdbtenants","text":"This method returns a list of accessible tenants (including tenant ID and names). The returned tenants list varies by the privileges of different user roles. To retrieve a full list of all available tenants, users must log in with admin role.","title":"GET /V1/CMDB/Tenants/"},{"location":"Get All Accessible Tenants API/#detail-information","text":"Title : Get All Asseccible Tenants API Version : 01/23/2019. API Server URL : http(s):// < NetBrain Web API Server Address > /ServicesAPI/API/V1/CMDB/Tenants Authentication : Type In Name Bearer Authentication Parameters Authentication token","title":"Detail Information"},{"location":"Get All Accessible Tenants API/#request-bodyrequired","text":"No request body. ## Parameters( *required ) No parameters required ## Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token* string Authentication token, get from login API. ## Response Name Type Description tenants array A list of all accessible tenants. tenantId string The tenant ID. tenantName string The tenant name. statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example : { 'tenants': [ { 'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant' } ], 'statusCode': 790200, 'statusDescription': 'Success.' }","title":"Request body(*required)"},{"location":"Get All Accessible Tenants API/#full-example","text":"# import python modules import json import requests import time import urllib3 import pprint urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" # Set proper headers headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"] = token try: # Do the HTTP request response = requests.get(full_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() print (result) else: print (\"Get tenants failed! - \" + str(response.text)) except Exception as e: return (str(e)) {'tenants': [{'tenantId': 'fb24f3f0-81a7-1929-4b8f-99106c23fa5b', 'tenantName': 'Initial Tenant'}], 'statusCode': 790200, 'statusDescription': 'Success.'}","title":"Full Example :"},{"location":"Get All Accessible Tenants API/#curl-code-from-postman","text":"curl -X GET \\ 'http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants?token=c00de805-9210-44a9-9a26-f0c1e944ea36' \\ -H 'Postman-Token: b3ecf2c4-d94a-4059-a01f-bcd21fc8a286' \\ -H 'cache-control: no-cache'","title":"cURL Code from Postman"},{"location":"Get All Accessible Tenants API/#error-example","text":"################################################################################################################### \"\"\"Error 1: empty url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"\" Response: \"Invalid URL'': No schema supplied. Perhaps you meant http://\" ################################################################################################################### \"\"\"Error 2: wrong url\"\"\" Input: token = \"828a4561-5ee5-40ac-bf98-01788be48330\" full_url = \"http://192.1688.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: \"\"\"HTTPConnectionPool(host='192.1688.28.79', port=80): Max retries exceeded with url: /ServicesAPI/API/V1/Session (Caused by NewConnectionError( '<urllib3.connection.HTTPConnection object at 0x0000022F203C79B0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\"\"\" ################################################################################################################### \"\"\"Error 3: empty token\"\"\" Input: token = \"\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. } ################################################################################################################### \"\"\"Error 4: wrong token\"\"\" Input: token = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" full_url = \"http://192.168.28.79/ServicesAPI/API/V1/CMDB/Tenants\" Response: { \"statusCode\": 795005, \"statusDescription\": \"Invalid token. }","title":"Error Example :"},{"location":"Get file list API/","text":"Get file list API POST /V1/CMDB/Files/ This function returns a list of files contained in a specified folder. Detail Information Title : Get file list API Version : 03/11/2019. API Server URL : http(s)://< IP address of NetBrain Web API Server >/ServicesAPI/API/V1/CMDB/Files/ Authentication : Type In Name Bearer Authentication Headers Authentication token Request body( *required ) Name Type Description folderId string The ID of the folder from which you want to get the files. Root folder (public folder) will be returned if folderId is null. fileTypes* array The file types you want to retrieve. There are three file types: \u25aa 0: Folder \u25aa 11: Map \u25aa 21: Dashboard Example: { \"folderId\": \"\", \"fileTypes\": [ 0, 11 ,21] } Path Parameters( *required ) No parameters required. Headers Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token string Authentication token, get from login API. Response Name Type Description items array A list of folders and files. id string The ID of a folder in the file tree. name string The name of a file. originalId string The ID of a specific dashboard or file. (Used for Map or Dashboard type only.) type integer The file types you want to retrieve. There are three file types: \u25aa 0: Folder \u25aa 11: Map \u25aa 21: Dashboard statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { \"items\": [ { \"id\":\"ad09aa07-b31d-4f42-a0aa-319697825b09\", \"name\":\"Public/Site Maps\", \"type\":0 }, { \"originalId\":\"75ff3cdf-dff4-48c6-a736-7a86e4374a29\", \"id\":\"2a19165f-a4a5-4488-ac5d-acdf9e287ed6\", \"name\":\"Public/New Folder/New Folder/New Map\", \"type\":11 }, { \"originalId\":\"d2650deb-5276-44cb-be21-43e2b129380a\", \"id\":\"a84cdca3-3710-47b1-b037-665e38fd6d08\", \"name\":\"Public/New Folder(1)/New Map\", \"type\":11 } ], \"statusCode\":790200, \"statusDescription\":\"Success.\" } Full Example: # import python modules import requests import time import urllib3 import pprint import json urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) # Set the request inputs token = \"cdba9af6-1f4d-45d0-8933-7ee38c3223b1\" nb_url = \"http://192.168.28.79\" full_url= nb_url + \"/ServicesAPI/API/V1/CMDB/Files/\" headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"]=token body = { \"folderId\": \"\", \"fileTypes\": [ 0, 11 ,21] } try: response = requests.post(full_url, headers = headers, data = json.dumps(body), verify = False) #response = requests.delete(full_url, headers = headers, verify = False) if response.status_code == 200: result = response.json() print (result) else: print (\"Get Files List Failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'items': [{'originalId': 'cf23253b-963e-a6e9-be56-d1bc75ea862c', 'id': 'bbf22db2-6a35-48c8-b3b0-537aac641295', 'name': 'Desktop/Map1', 'type': 11}, {'originalId': '3379471c-1c06-19af-b030-8dc82245a7f1', 'id': '7a4cece9-7565-44e9-986e-d4f285a14cb3', 'name': 'Desktop/Map2', 'type': 11}], 'statusCode': 790200, 'statusDescription': 'Success.'} cURL Code from Postman curl -X POST \\ http://192.168.28.79/ServicesAPI/API/V1/CMDB/Files/ \\ -H 'Content-Type: application/json' \\ -H 'Postman-Token: f8137d46-98cd-42aa-9aa1-f660b68d872e' \\ -H 'cache-control: no-cache' \\ -H 'token: cdba9af6-1f4d-45d0-8933-7ee38c3223b1' \\ -d '{ \"folderId\": \"\", \"fileTypes\": [ 0, 11 ,21] }'","title":"Get file list API"},{"location":"Get file list API/#get-file-list-api","text":"","title":"Get file list API"},{"location":"Get file list API/#post-v1cmdbfiles","text":"This function returns a list of files contained in a specified folder.","title":"POST /V1/CMDB/Files/"},{"location":"Get file list API/#detail-information","text":"Title : Get file list API Version : 03/11/2019. API Server URL : http(s)://< IP address of NetBrain Web API Server >/ServicesAPI/API/V1/CMDB/Files/ Authentication : Type In Name Bearer Authentication Headers Authentication token","title":"Detail Information"},{"location":"Get file list API/#request-bodyrequired","text":"Name Type Description folderId string The ID of the folder from which you want to get the files. Root folder (public folder) will be returned if folderId is null. fileTypes* array The file types you want to retrieve. There are three file types: \u25aa 0: Folder \u25aa 11: Map \u25aa 21: Dashboard Example: { \"folderId\": \"\", \"fileTypes\": [ 0, 11 ,21] }","title":"Request body(*required)"},{"location":"Get file list API/#path-parametersrequired","text":"No parameters required.","title":"Path Parameters(*required)"},{"location":"Get file list API/#headers","text":"Data Format Headers Name Type Description Content-Type string support \"application/json\" Accept string support \"application/json\" Authorization Headers Name Type Description token string Authentication token, get from login API.","title":"Headers"},{"location":"Get file list API/#response","text":"Name Type Description items array A list of folders and files. id string The ID of a folder in the file tree. name string The name of a file. originalId string The ID of a specific dashboard or file. (Used for Map or Dashboard type only.) type integer The file types you want to retrieve. There are three file types: \u25aa 0: Folder \u25aa 11: Map \u25aa 21: Dashboard statusCode integer Code issued by NetBrain server indicating the execution result. statusDescription string The explanation of the status code. Example { \"items\": [ { \"id\":\"ad09aa07-b31d-4f42-a0aa-319697825b09\", \"name\":\"Public/Site Maps\", \"type\":0 }, { \"originalId\":\"75ff3cdf-dff4-48c6-a736-7a86e4374a29\", \"id\":\"2a19165f-a4a5-4488-ac5d-acdf9e287ed6\", \"name\":\"Public/New Folder/New Folder/New Map\", \"type\":11 }, { \"originalId\":\"d2650deb-5276-44cb-be21-43e2b129380a\", \"id\":\"a84cdca3-3710-47b1-b037-665e38fd6d08\", \"name\":\"Public/New Folder(1)/New Map\", \"type\":11 } ], \"statusCode\":790200, \"statusDescription\":\"Success.\" }","title":"Response"},{"location":"Get file list API/#full-example","text":"# import python modules import requests import time import urllib3 import pprint import json urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) # Set the request inputs token = \"cdba9af6-1f4d-45d0-8933-7ee38c3223b1\" nb_url = \"http://192.168.28.79\" full_url= nb_url + \"/ServicesAPI/API/V1/CMDB/Files/\" headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} headers[\"Token\"]=token body = { \"folderId\": \"\", \"fileTypes\": [ 0, 11 ,21] } try: response = requests.post(full_url, headers = headers, data = json.dumps(body), verify = False) #response = requests.delete(full_url, headers = headers, verify = False) if response.status_code == 200: result = response.json() print (result) else: print (\"Get Files List Failed! - \" + str(response.text)) except Exception as e: print (str(e)) {'items': [{'originalId': 'cf23253b-963e-a6e9-be56-d1bc75ea862c', 'id': 'bbf22db2-6a35-48c8-b3b0-537aac641295', 'name': 'Desktop/Map1', 'type': 11}, {'originalId': '3379471c-1c06-19af-b030-8dc82245a7f1', 'id': '7a4cece9-7565-44e9-986e-d4f285a14cb3', 'name': 'Desktop/Map2', 'type': 11}], 'statusCode': 790200, 'statusDescription': 'Success.'}","title":"Full Example:"},{"location":"Get file list API/#curl-code-from-postman","text":"curl -X POST \\ http://192.168.28.79/ServicesAPI/API/V1/CMDB/Files/ \\ -H 'Content-Type: application/json' \\ -H 'Postman-Token: f8137d46-98cd-42aa-9aa1-f660b68d872e' \\ -H 'cache-control: no-cache' \\ -H 'token: cdba9af6-1f4d-45d0-8933-7ee38c3223b1' \\ -d '{ \"folderId\": \"\", \"fileTypes\": [ 0, 11 ,21] }'","title":"cURL Code from Postman"},{"location":"test/","text":"Retrive multiple dynamic map by calling trigger diagnosis API In this use case, we will totally focus on trigger diagnosis API to trigger multiple dynamic map as diagnosis referances. At the beginning, we must clarify that the trigger diagnosis API is one of the most important API in Netbrain's API library. Obviously it can trigger few dynamic maps from Netbrain to help engineers diagnose the real time issuses of network, actually the most significant value of this API is that it is the bridge for 3rd party data integration with Netbrain. Thus, if users eager to intergration with Netbrain's function and data from other software, this API is the only and the easist way so far. Step 1: Use case preparation 1a. import all useful modules and create global variables 1b. call login API 1c. call specify_a_working_domain API Step 2: Calling trigger_diagnosis API 2a. Call API to Default Neighbor Map 2b. Call API to Open Site Map of The Device 2c. Call API to Trigger An Existing Map 2d. Call API to Map A Path Step 1: Use case preparation. 1a. import the corresponding modules in python and some fixed input parameters. Note: If users try to use this code. please remember to change the \"nb_url\" to users' own working url. 1b. login API. Same with use case 2, we calling the login API with \"username\" and \"password\" as inputs in the first step. As response we can get the authentication token as one fixed input in following APIs calling. If users get errors when calling this API please check the API documentation on Github_login . 1c. specify_a_working_domain API. After we running this step successfully, we directly complete the full login processes which means we totally join in Netbrain System by calling APIs(because we have record our tenantId and domainId\uff0cif users don't know the ID of corresponding tenant and domain please fully follow step 1 to step 4 in use case 1). Next step, we will start to use Netbrain functions formally. If users want to get more details about this API or get errors when calling this API please check the API documentation on Github_domain . # import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json nb_url = \"http://192.168.28.79\" headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} TenantName = \"Initial Tenant\" DomainName = \"Support and Service\" username = \"gdluserTest\" password = \"123456\" tenant_id = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" domain_id = \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" trigger_url = nb_url + \"/ServicesAPI/API/V1/Triggers/Run\" # Calling Login API. body = { \"username\" : username, \"password\" : password } login_URL = nb_url + \"/ServicesAPI/API/V1/Session\" def login(login_URL, body, headers): try: # Do the HTTP request response = requests.post(login_URL, headers=headers, data = json.dumps(body), verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() return (js[\"token\"]) else: return (\"Get token failed! - \" + str(response.text)) except Exception as e: return (str(e)) token = login(login_URL, body, headers) print(token) # print out the authentication token. API Response: e85a53f1-5741-4d3d-9200-e1473c5453a4 # Calling Specify A Working Domain API Specify_a_working_domain_url = nb_url + \"/ServicesAPI/API/V1/Session/CurrentDomain\" def specify_a_working_domain(tenantId, domainId, Specify_a_working_domain_url, headers, token): headers[\"Token\"] = token body = { \"tenantId\": tenant_id, \"domainId\": domain_id } try: # Do the HTTP request response = requests.put(Specify_a_working_domain_url, data=json.dumps(body), headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() return (\"Working Domain Specified Successfully, with domainId: \" + domainId) elif response.status_code != 200: return (\"Login failed! - \" + str(response.text)) except Exception as e: print (str(e)) res = specify_a_working_domain(tenantId, domainId, Specify_a_working_domain_url, headers, token) print (res) API Response: Working Domain Specified Successfully, with domainId: 850ff5e9-c639-404d-85a3-d920dbee509c Step 2: Calling Trigger Diagnosis API After we finished all preparations, we are going to start to calling this API in step. One of the most significant characteristic of trigger diagnosis API is the gigantic input body (as a post function the body input is reasonable). There are more than 100 attributes in the entire body parameter. The body including 6 sub-sections, each section provide different input informations.See detail explanation in Github_trigger_diagnosis Note: before calling this API, users must create a stub in Netbrain GUI system first: click desktop menu button -> System Automation Task Manager -> API Stub Manager -> Add Stub. 2a. Calling API to Create Default Neighbor Map Note: 1) if the input value of map_setting.device is empty, then the API response will return the map about basic_setting.device defaulty. 2) if the input value of map_setting.include_neighbor is empty, the API response map will return all neighbors of map_setting.device defaultly. 3) if the input value of map_setting.device set as an un-exist device name, an error will occured : {'error': 'Failed to find the designated device SW40'}. 2b. Calling API to Open Site Map of The Device. 2c. Calling API to Trigger An Existing Map. When user willing to use this feature please follow the input format in code cell respectively and if user provide the map_id then the value of duplicate_map also must be provided. Or there would be an error occured: {'error': 'The duplicate_map flag is not set in the map-open parameters.'}. 2d. Calling API to Map A Path. When user willing to use this feature please follow the input format and some input Parameters must be provided or an error will occoured: {'error': 'Source device or destination device is not provided.'}. Til now we have fully called trigger diagnosis API and got four different type of maps. Users can copy the \"mapUrl\" in API response and open it in any browsers to check the map detail directly. If users want to get more details about this API or get errors when calling this API please check the API documentation on Github_trigger_diagnosis # Calling API to Create Default Neighbor Map. API_Body = { \"domain_setting\": { \"tenant_id\": tenant_id, \"domain_id\": domain_id }, \"basic_setting\": { \"triggered_by\": \"Netbrain\", \"user\": \"gdluserTest\", \"device\": \"R20\", \"stub_name\": \"stubTest1\" }, \"map_setting\": { \"map_create_mode\": 0, \"map_device_para\": { \"device\": \"SW4\", \"include_neighbor\": \"\", \"interfaces\": [\"\"], \"neighbor_type\": \"\" } } } def trigger_default_map(trigger_url, headers, API_Body, token): headers[\"Token\"] = token api_result = requests.post(trigger_url, data=json.dumps(API_Body), headers=headers, verify=False) if api_result.status_code == 200: return api_result.json() else: return api_result.json() result = trigger_default_map(trigger_url, headers, API_Body, token) result API Response: {'mapId': 'e7343091-c01a-40c9-9e33-bb066bb9d7f8', 'mapName': 'stubTest1-20190222154255', 'mapType': 1, 'mapUrl': 'http://192.168.28.79/map.html?t=fb24f3f0-81a7-1929-4b8f-99106c23fa5b&d=0201adc4-ae96-46f0-ae3d-01cdba9e41d6&id=e7343091-c01a-40c9-9e33-bb066bb9d7f8&maptype=1'} # Calling API to Open Site Map of The Device. # Please follow the input format API_Body1 = { \"domain_setting\": { \"tenant_id\": \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\", \"domain_id\": \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" }, \"basic_setting\": { \"triggered_by\": \"Netbrain\", \"user\": \"gdluserTest\", \"device\": \"R20\", \"stub_name\": \"stubTest1\" }, \"map_setting\": { \"map_create_mode\": 1, \"map_device_sitemap_para\": { \"device\": \"R10\", # can not be null. \"duplicate_map\": False # can not be null. } } } result1 = trigger_default_map(trigger_url, headers, API_Body1, token) result1 API Response: {'mapId': 'e762eaa7-507f-4c02-9d40-c616f6d64702', 'mapName': 'AM-ARG-BA-BEN-1621-KM375RAM1618', 'mapType': 3, 'mapUrl': 'http://192.168.28.79/map.html?t=fb24f3f0-81a7-1929-4b8f-99106c23fa5b&d=0201adc4-ae96-46f0-ae3d-01cdba9e41d6&id=e762eaa7-507f-4c02-9d40-c616f6d64702&maptype=3'} # Calling API to Trigger An Existing Map. # Please follow the input format API_Body2 = { \"domain_setting\": { \"tenant_id\": \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\", \"domain_id\": \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" }, \"basic_setting\": { \"triggered_by\": \"Netbrain\", \"user\": \"gdluserTest\", \"device\": \"R20\", \"stub_name\": \"stubTest1\" }, \"map_setting\": { \"map_create_mode\": 2, \"map_open_para\": { \"map_id\": \"e762eaa7-507f-4c02-9d40-c616f6d64702\", # can not be null. \"site_id\": \"\", # Please change to the correct input value before using, or an error will occured \"device_group_id\": \"\", # Please change to the correct input value before using, or an error will occured \"duplicate_map\": True # can not be null. } } } result2 = trigger_default_map(trigger_url, headers, API_Body2, token) result2 API Response: {'mapId': 'f881543a-a631-45cb-8778-840f33a9341c', 'mapName': 'stubTest1-20190222155811', 'mapType': 1, 'mapUrl': 'http://192.168.28.79/map.html?t=fb24f3f0-81a7-1929-4b8f-99106c23fa5b&d=0201adc4-ae96-46f0-ae3d-01cdba9e41d6&id=f881543a-a631-45cb-8778-840f33a9341c&maptype=1'} # Calling API to Map A Path. # Please follow the input format API_Body3 = { \"domain_setting\": { \"tenant_id\": \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\", \"domain_id\": \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" }, \"basic_setting\": { \"triggered_by\": \"Netbrain\", \"user\": \"gdluserTest\", \"device\": \"R20\", \"stub_name\": \"stubTest1\" }, \"map_setting\": { \"map_create_mode\": 3, \"map_path_para\": { \"source\": \"R3\", # Can not be null \"source_gateway\": \"10.120.15.5\", \"source_gateway_dev\": \"R3\", \"source_gateway_intf\": \"Ethernet0/3.15\", \"source_port\": \"\", \"destination\": \"R2\",# Can not be null \"destination_gateway\": \"10.120.13.1\", \"destination_port\": \"\", \"destination_gateway_dev\": \"R2\", \"destination_gateway_intf\": \"Ethernet0/3.13\", \"direction\": 1, # Can not be null \"protocol\": 28, # Can not be null \"protocol_name\": \"\", \"path_analysis_set_name\": \"\", \"path_analysis_set\": \"L3 Path\", # Can not be null \"dataSource\": { \"type\": 1, \"recent\": { \"unit\": 2, \"duration\": 5 }, \"range\": { \"start\": \"\", \"end\": \"\" }, \"around\": { \"time\": \"\" } } } } } result3 = trigger_default_map(trigger_url, headers, API_Body3, token) result3 API Response: {'mapId': '2a46013a-f913-4865-9f6c-bf8a77636f54', 'mapName': 'stubTest1-20190222160345', 'mapType': 1, 'mapUrl': 'http://192.168.28.79/map.html?t=fb24f3f0-81a7-1929-4b8f-99106c23fa5b&d=0201adc4-ae96-46f0-ae3d-01cdba9e41d6&id=2a46013a-f913-4865-9f6c-bf8a77636f54&maptype=1', 'taskId': 'ccd770be-2c7f-427a-921b-03b37b447cc0'} Step 3: Calling Logout API Logout_url = nb_url + \"/ServicesAPI/API/V1/Session\" def logout(Logout_url, token, headers): headers[\"token\"] = token try: # Do the HTTP request response = requests.delete(Logout_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() return (js) else: return (\"Session logout failed! - \" + str(response.text)) except Exception as e: return (str(e)) logout = logout(Logout_url, token, headers) logout API Response: {'statusCode': 790200, 'statusDescription': 'Success.'} Referance: 1) login API: https://github.com/Gongdai/Netbrain_REST_API_First_Regularization/blob/master/Netbrain_REST_API/API_test/STANDARD_formate_TEST1_LOGIN_API.ipynb 2) specify_a_working_domain API: https://github.com/Gongdai/Netbrain_REST_API_First_Regularization/blob/master/Netbrain_REST_API/API_test/STANDARD_formate_Specify_a_domain_to_work_on_API_Test1%20.ipynb 3) trigger_diagnosis API: https://github.com/Gongdai/Netbrain_REST_API_First_Regularization/blob/master/Netbrain_REST_API/API_test/Trigger_Path_Map_program/trigger_map_and_path_API.ipynb","title":"Retrive multiple dynamic map by calling trigger diagnosis API"},{"location":"test/#retrive-multiple-dynamic-map-by-calling-trigger-diagnosis-api","text":"In this use case, we will totally focus on trigger diagnosis API to trigger multiple dynamic map as diagnosis referances. At the beginning, we must clarify that the trigger diagnosis API is one of the most important API in Netbrain's API library. Obviously it can trigger few dynamic maps from Netbrain to help engineers diagnose the real time issuses of network, actually the most significant value of this API is that it is the bridge for 3rd party data integration with Netbrain. Thus, if users eager to intergration with Netbrain's function and data from other software, this API is the only and the easist way so far. Step 1: Use case preparation 1a. import all useful modules and create global variables 1b. call login API 1c. call specify_a_working_domain API Step 2: Calling trigger_diagnosis API 2a. Call API to Default Neighbor Map 2b. Call API to Open Site Map of The Device 2c. Call API to Trigger An Existing Map 2d. Call API to Map A Path","title":"Retrive multiple dynamic map by calling trigger diagnosis API"},{"location":"test/#step-1-use-case-preparation","text":"1a. import the corresponding modules in python and some fixed input parameters. Note: If users try to use this code. please remember to change the \"nb_url\" to users' own working url. 1b. login API. Same with use case 2, we calling the login API with \"username\" and \"password\" as inputs in the first step. As response we can get the authentication token as one fixed input in following APIs calling. If users get errors when calling this API please check the API documentation on Github_login . 1c. specify_a_working_domain API. After we running this step successfully, we directly complete the full login processes which means we totally join in Netbrain System by calling APIs(because we have record our tenantId and domainId\uff0cif users don't know the ID of corresponding tenant and domain please fully follow step 1 to step 4 in use case 1). Next step, we will start to use Netbrain functions formally. If users want to get more details about this API or get errors when calling this API please check the API documentation on Github_domain . # import python modules import requests import time import urllib3 import pprint #urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) import json nb_url = \"http://192.168.28.79\" headers = {'Content-Type': 'application/json', 'Accept': 'application/json'} TenantName = \"Initial Tenant\" DomainName = \"Support and Service\" username = \"gdluserTest\" password = \"123456\" tenant_id = \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\" domain_id = \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" trigger_url = nb_url + \"/ServicesAPI/API/V1/Triggers/Run\" # Calling Login API. body = { \"username\" : username, \"password\" : password } login_URL = nb_url + \"/ServicesAPI/API/V1/Session\" def login(login_URL, body, headers): try: # Do the HTTP request response = requests.post(login_URL, headers=headers, data = json.dumps(body), verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() return (js[\"token\"]) else: return (\"Get token failed! - \" + str(response.text)) except Exception as e: return (str(e)) token = login(login_URL, body, headers) print(token) # print out the authentication token. API Response: e85a53f1-5741-4d3d-9200-e1473c5453a4 # Calling Specify A Working Domain API Specify_a_working_domain_url = nb_url + \"/ServicesAPI/API/V1/Session/CurrentDomain\" def specify_a_working_domain(tenantId, domainId, Specify_a_working_domain_url, headers, token): headers[\"Token\"] = token body = { \"tenantId\": tenant_id, \"domainId\": domain_id } try: # Do the HTTP request response = requests.put(Specify_a_working_domain_url, data=json.dumps(body), headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data result = response.json() return (\"Working Domain Specified Successfully, with domainId: \" + domainId) elif response.status_code != 200: return (\"Login failed! - \" + str(response.text)) except Exception as e: print (str(e)) res = specify_a_working_domain(tenantId, domainId, Specify_a_working_domain_url, headers, token) print (res) API Response: Working Domain Specified Successfully, with domainId: 850ff5e9-c639-404d-85a3-d920dbee509c","title":"Step 1: Use case preparation."},{"location":"test/#step-2-calling-trigger-diagnosis-api","text":"After we finished all preparations, we are going to start to calling this API in step. One of the most significant characteristic of trigger diagnosis API is the gigantic input body (as a post function the body input is reasonable). There are more than 100 attributes in the entire body parameter. The body including 6 sub-sections, each section provide different input informations.See detail explanation in Github_trigger_diagnosis Note: before calling this API, users must create a stub in Netbrain GUI system first: click desktop menu button -> System Automation Task Manager -> API Stub Manager -> Add Stub. 2a. Calling API to Create Default Neighbor Map Note: 1) if the input value of map_setting.device is empty, then the API response will return the map about basic_setting.device defaulty. 2) if the input value of map_setting.include_neighbor is empty, the API response map will return all neighbors of map_setting.device defaultly. 3) if the input value of map_setting.device set as an un-exist device name, an error will occured : {'error': 'Failed to find the designated device SW40'}. 2b. Calling API to Open Site Map of The Device. 2c. Calling API to Trigger An Existing Map. When user willing to use this feature please follow the input format in code cell respectively and if user provide the map_id then the value of duplicate_map also must be provided. Or there would be an error occured: {'error': 'The duplicate_map flag is not set in the map-open parameters.'}. 2d. Calling API to Map A Path. When user willing to use this feature please follow the input format and some input Parameters must be provided or an error will occoured: {'error': 'Source device or destination device is not provided.'}. Til now we have fully called trigger diagnosis API and got four different type of maps. Users can copy the \"mapUrl\" in API response and open it in any browsers to check the map detail directly. If users want to get more details about this API or get errors when calling this API please check the API documentation on Github_trigger_diagnosis # Calling API to Create Default Neighbor Map. API_Body = { \"domain_setting\": { \"tenant_id\": tenant_id, \"domain_id\": domain_id }, \"basic_setting\": { \"triggered_by\": \"Netbrain\", \"user\": \"gdluserTest\", \"device\": \"R20\", \"stub_name\": \"stubTest1\" }, \"map_setting\": { \"map_create_mode\": 0, \"map_device_para\": { \"device\": \"SW4\", \"include_neighbor\": \"\", \"interfaces\": [\"\"], \"neighbor_type\": \"\" } } } def trigger_default_map(trigger_url, headers, API_Body, token): headers[\"Token\"] = token api_result = requests.post(trigger_url, data=json.dumps(API_Body), headers=headers, verify=False) if api_result.status_code == 200: return api_result.json() else: return api_result.json() result = trigger_default_map(trigger_url, headers, API_Body, token) result API Response: {'mapId': 'e7343091-c01a-40c9-9e33-bb066bb9d7f8', 'mapName': 'stubTest1-20190222154255', 'mapType': 1, 'mapUrl': 'http://192.168.28.79/map.html?t=fb24f3f0-81a7-1929-4b8f-99106c23fa5b&d=0201adc4-ae96-46f0-ae3d-01cdba9e41d6&id=e7343091-c01a-40c9-9e33-bb066bb9d7f8&maptype=1'} # Calling API to Open Site Map of The Device. # Please follow the input format API_Body1 = { \"domain_setting\": { \"tenant_id\": \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\", \"domain_id\": \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" }, \"basic_setting\": { \"triggered_by\": \"Netbrain\", \"user\": \"gdluserTest\", \"device\": \"R20\", \"stub_name\": \"stubTest1\" }, \"map_setting\": { \"map_create_mode\": 1, \"map_device_sitemap_para\": { \"device\": \"R10\", # can not be null. \"duplicate_map\": False # can not be null. } } } result1 = trigger_default_map(trigger_url, headers, API_Body1, token) result1 API Response: {'mapId': 'e762eaa7-507f-4c02-9d40-c616f6d64702', 'mapName': 'AM-ARG-BA-BEN-1621-KM375RAM1618', 'mapType': 3, 'mapUrl': 'http://192.168.28.79/map.html?t=fb24f3f0-81a7-1929-4b8f-99106c23fa5b&d=0201adc4-ae96-46f0-ae3d-01cdba9e41d6&id=e762eaa7-507f-4c02-9d40-c616f6d64702&maptype=3'} # Calling API to Trigger An Existing Map. # Please follow the input format API_Body2 = { \"domain_setting\": { \"tenant_id\": \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\", \"domain_id\": \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" }, \"basic_setting\": { \"triggered_by\": \"Netbrain\", \"user\": \"gdluserTest\", \"device\": \"R20\", \"stub_name\": \"stubTest1\" }, \"map_setting\": { \"map_create_mode\": 2, \"map_open_para\": { \"map_id\": \"e762eaa7-507f-4c02-9d40-c616f6d64702\", # can not be null. \"site_id\": \"\", # Please change to the correct input value before using, or an error will occured \"device_group_id\": \"\", # Please change to the correct input value before using, or an error will occured \"duplicate_map\": True # can not be null. } } } result2 = trigger_default_map(trigger_url, headers, API_Body2, token) result2 API Response: {'mapId': 'f881543a-a631-45cb-8778-840f33a9341c', 'mapName': 'stubTest1-20190222155811', 'mapType': 1, 'mapUrl': 'http://192.168.28.79/map.html?t=fb24f3f0-81a7-1929-4b8f-99106c23fa5b&d=0201adc4-ae96-46f0-ae3d-01cdba9e41d6&id=f881543a-a631-45cb-8778-840f33a9341c&maptype=1'} # Calling API to Map A Path. # Please follow the input format API_Body3 = { \"domain_setting\": { \"tenant_id\": \"fb24f3f0-81a7-1929-4b8f-99106c23fa5b\", \"domain_id\": \"0201adc4-ae96-46f0-ae3d-01cdba9e41d6\" }, \"basic_setting\": { \"triggered_by\": \"Netbrain\", \"user\": \"gdluserTest\", \"device\": \"R20\", \"stub_name\": \"stubTest1\" }, \"map_setting\": { \"map_create_mode\": 3, \"map_path_para\": { \"source\": \"R3\", # Can not be null \"source_gateway\": \"10.120.15.5\", \"source_gateway_dev\": \"R3\", \"source_gateway_intf\": \"Ethernet0/3.15\", \"source_port\": \"\", \"destination\": \"R2\",# Can not be null \"destination_gateway\": \"10.120.13.1\", \"destination_port\": \"\", \"destination_gateway_dev\": \"R2\", \"destination_gateway_intf\": \"Ethernet0/3.13\", \"direction\": 1, # Can not be null \"protocol\": 28, # Can not be null \"protocol_name\": \"\", \"path_analysis_set_name\": \"\", \"path_analysis_set\": \"L3 Path\", # Can not be null \"dataSource\": { \"type\": 1, \"recent\": { \"unit\": 2, \"duration\": 5 }, \"range\": { \"start\": \"\", \"end\": \"\" }, \"around\": { \"time\": \"\" } } } } } result3 = trigger_default_map(trigger_url, headers, API_Body3, token) result3 API Response: {'mapId': '2a46013a-f913-4865-9f6c-bf8a77636f54', 'mapName': 'stubTest1-20190222160345', 'mapType': 1, 'mapUrl': 'http://192.168.28.79/map.html?t=fb24f3f0-81a7-1929-4b8f-99106c23fa5b&d=0201adc4-ae96-46f0-ae3d-01cdba9e41d6&id=2a46013a-f913-4865-9f6c-bf8a77636f54&maptype=1', 'taskId': 'ccd770be-2c7f-427a-921b-03b37b447cc0'}","title":"Step 2: Calling Trigger Diagnosis API"},{"location":"test/#step-3-calling-logout-api","text":"Logout_url = nb_url + \"/ServicesAPI/API/V1/Session\" def logout(Logout_url, token, headers): headers[\"token\"] = token try: # Do the HTTP request response = requests.delete(Logout_url, headers=headers, verify=False) # Check for HTTP codes other than 200 if response.status_code == 200: # Decode the JSON response into a dictionary and use the data js = response.json() return (js) else: return (\"Session logout failed! - \" + str(response.text)) except Exception as e: return (str(e)) logout = logout(Logout_url, token, headers) logout API Response: {'statusCode': 790200, 'statusDescription': 'Success.'}","title":"Step 3: Calling Logout API"},{"location":"test/#referance","text":"1) login API: https://github.com/Gongdai/Netbrain_REST_API_First_Regularization/blob/master/Netbrain_REST_API/API_test/STANDARD_formate_TEST1_LOGIN_API.ipynb 2) specify_a_working_domain API: https://github.com/Gongdai/Netbrain_REST_API_First_Regularization/blob/master/Netbrain_REST_API/API_test/STANDARD_formate_Specify_a_domain_to_work_on_API_Test1%20.ipynb 3) trigger_diagnosis API: https://github.com/Gongdai/Netbrain_REST_API_First_Regularization/blob/master/Netbrain_REST_API/API_test/Trigger_Path_Map_program/trigger_map_and_path_API.ipynb","title":"Referance:"}]}